//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a RdGen v1.08.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using JetBrains.Annotations;

using JetBrains.Core;
using JetBrains.Diagnostics;
using JetBrains.Collections;
using JetBrains.Collections.Viewable;
using JetBrains.Lifetimes;
using JetBrains.Serialization;
using JetBrains.Rd;
using JetBrains.Rd.Base;
using JetBrains.Rd.Impl;
using JetBrains.Rd.Tasks;
using JetBrains.Rd.Util;
using JetBrains.Rd.Text;


// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantOverflowCheckingContext


namespace org.example
{
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:20</p>
  /// </summary>
  public class ExampleModelNova : RdExtBase
  {
    //fields
    //public fields
    [NotNull] public ISource<int> Push => _Push;
    [NotNull] public IViewableProperty<int> Version => _Version;
    [NotNull] public IViewableMap<int, Document> Documents => _Documents;
    [NotNull] public IViewableMap<ScalarExample, TextControl> Editors => _Editors;
    
    //private fields
    [NotNull] private readonly RdSignal<int> _Push;
    [NotNull] private readonly RdProperty<int> _Version;
    [NotNull] private readonly RdMap<int, Document> _Documents;
    [NotNull] private readonly RdMap<ScalarExample, TextControl> _Editors;
    
    //primary constructor
    private ExampleModelNova(
      [NotNull] RdSignal<int> push,
      [NotNull] RdProperty<int> version,
      [NotNull] RdMap<int, Document> documents,
      [NotNull] RdMap<ScalarExample, TextControl> editors
    )
    {
      if (push == null) throw new ArgumentNullException("push");
      if (version == null) throw new ArgumentNullException("version");
      if (documents == null) throw new ArgumentNullException("documents");
      if (editors == null) throw new ArgumentNullException("editors");
      
      _Push = push;
      _Version = version;
      _Documents = documents;
      _Editors = editors;
      _Version.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("push", _Push));
      BindableChildren.Add(new KeyValuePair<string, object>("version", _Version));
      BindableChildren.Add(new KeyValuePair<string, object>("documents", _Documents));
      BindableChildren.Add(new KeyValuePair<string, object>("editors", _Editors));
    }
    //secondary constructor
    private ExampleModelNova (
    ) : this (
      new RdSignal<int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt),
      new RdProperty<int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt),
      new RdMap<int, Document>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, Document.Read, Document.Write),
      new RdMap<ScalarExample, TextControl>(ScalarExample.Read, ScalarExample.Write, TextControl.Read, TextControl.Write)
    ) {}
    //deconstruct trait
    //statics
    
    
    
    protected override long SerializationHash => -5738447821523408934L;
    
    protected override Action<ISerializers> Register => RegisterDeclaredTypesSerializers;
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers)
    {
      serializers.Register(Baz.Read, Baz.Write);
      serializers.Register(Foo_Unknown.Read, Foo_Unknown.Write);
      serializers.Register(ScalarPrimer_Unknown.Read, ScalarPrimer_Unknown.Write);
      serializers.Register(A_Unknown.Read, A_Unknown.Write);
      
      serializers.RegisterToplevelOnce(typeof(ExampleRootNova), ExampleRootNova.RegisterDeclaredTypesSerializers);
    }
    
    public ExampleModelNova(Lifetime lifetime, IProtocol protocol) : this()
    {
      Identify(protocol.Identities, RdId.Root.Mix("ExampleModelNova"));
      Bind(lifetime, protocol, "ExampleModelNova");
    }
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("ExampleModelNova (");
      using (printer.IndentCookie()) {
        printer.Print("push = "); _Push.PrintEx(printer); printer.Println();
        printer.Print("version = "); _Version.PrintEx(printer); printer.Println();
        printer.Print("documents = "); _Documents.PrintEx(printer); printer.Println();
        printer.Print("editors = "); _Editors.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:43</p>
  /// </summary>
  public abstract class A : Foo
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<string> Y => _Y;
    [NotNull] public IViewableProperty<org.example.Z> Z => _Z;
    
    //private fields
    [NotNull] protected readonly RdProperty<string> _Y;
    [NotNull] protected readonly RdProperty<org.example.Z> _Z;
    
    //primary constructor
    protected A(
      [NotNull] RdProperty<string> y,
      [NotNull] RdProperty<org.example.Z> z,
      int x,
      [NotNull] RdMap<int, int> sdf
    ) : base (
      x,
      sdf
     ) 
    {
      if (y == null) throw new ArgumentNullException("y");
      if (z == null) throw new ArgumentNullException("z");
      
      _Y = y;
      _Z = z;
      _Y.OptimizeNested = true;
      _Z.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("y", _Y));
      BindableChildren.Add(new KeyValuePair<string, object>("z", _Z));
    }
    //secondary constructor
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<A> Read = Polymorphic<A>.ReadAbstract(A_Unknown.Read);
    
    public static new CtxWriteDelegate<A> Write = Polymorphic<A>.Write;
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    //toString
  }
  
  
  public sealed class A_Unknown : A
  {
    //fields
    //public fields
    
    //private fields
    //primary constructor
    private A_Unknown(
      [NotNull] RdProperty<string> y,
      [NotNull] RdProperty<org.example.Z> z,
      int x,
      [NotNull] RdMap<int, int> sdf
    ) : base (
      y,
      z,
      x,
      sdf
     ) 
    {
    }
    //secondary constructor
    public A_Unknown (
      int x
    ) : this (
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new RdProperty<org.example.Z>(ReadZ, WriteZ),
      x,
      new RdMap<int, int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt)
    ) {}
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<A_Unknown> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var y = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var z = RdProperty<org.example.Z>.Read(ctx, reader, ReadZ, WriteZ);
      var x = reader.ReadInt();
      var sdf = RdMap<int, int>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt);
      var _result = new A_Unknown(y, z, x, sdf).WithId(_id);
      return _result;
    };
    public static CtxReadDelegate<org.example.Z> ReadZ = new CtxReadDelegate<org.example.Z>(JetBrains.Rd.Impl.Serializers.ReadEnum<org.example.Z>);
    
    public static new CtxWriteDelegate<A_Unknown> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdProperty<string>.Write(ctx, writer, value._Y);
      RdProperty<org.example.Z>.Write(ctx, writer, value._Z);
      writer.Write(value.X);
      RdMap<int, int>.Write(ctx, writer, value._Sdf);
    };
    public static  CtxWriteDelegate<org.example.Z> WriteZ = new CtxWriteDelegate<org.example.Z>(JetBrains.Rd.Impl.Serializers.WriteEnum<org.example.Z>);
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("A_Unknown (");
      using (printer.IndentCookie()) {
        printer.Print("y = "); _Y.PrintEx(printer); printer.Println();
        printer.Print("z = "); _Z.PrintEx(printer); printer.Println();
        printer.Print("x = "); X.PrintEx(printer); printer.Println();
        printer.Print("sdf = "); _Sdf.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:51</p>
  /// </summary>
  public sealed class Baz : A
  {
    //fields
    //public fields
    [NotNull] public List<org.example.Foo> Foo {get; private set;}
    [NotNull] public List<A> Bar {get; private set;}
    [NotNull] public string Nls_field {get; private set;}
    [CanBeNull] public string Nls_nullable_field {get; private set;}
    [NotNull] public List<string> String_list_field {get; private set;}
    [NotNull] public List<string> Nls_list_field {get; private set;}
    [NotNull] public IViewableProperty<org.example.Foo> Foo1 => _Foo1;
    [NotNull] public IViewableProperty<A> Bar1 => _Bar1;
    [NotNull] public IViewableMap<int, ScalarPrimer> MapScalar => _MapScalar;
    [NotNull] public IViewableMap<int, FooBar> MapBindable => _MapBindable;
    [NotNull] public IViewableProperty<string> Property_with_default_nls => _Property_with_default_nls;
    [NotNull] public IViewableProperty<string> Property_with_several_attrs => _Property_with_several_attrs;
    [NotNull] public IViewableProperty<string> Nls_prop => _Nls_prop;
    [NotNull] public IViewableProperty<string> Nullable_nls_prop => _Nullable_nls_prop;
    [NotNull] public string Non_nls_open_field {get; private set;}
    
    //private fields
    [NotNull] private readonly RdProperty<org.example.Foo> _Foo1;
    [NotNull] private readonly RdProperty<A> _Bar1;
    [NotNull] private readonly RdMap<int, ScalarPrimer> _MapScalar;
    [NotNull] private readonly RdMap<int, FooBar> _MapBindable;
    [NotNull] private readonly RdProperty<string> _Property_with_default_nls;
    [NotNull] private readonly RdProperty<string> _Property_with_several_attrs;
    [NotNull] private readonly RdProperty<string> _Nls_prop;
    [NotNull] private readonly RdProperty<string> _Nullable_nls_prop;
    
    //primary constructor
    private Baz(
      [NotNull] List<org.example.Foo> foo,
      [NotNull] List<A> bar,
      [NotNull] string nls_field,
      [CanBeNull] string nls_nullable_field,
      [NotNull] List<string> string_list_field,
      [NotNull] List<string> nls_list_field,
      [NotNull] RdProperty<org.example.Foo> foo1,
      [NotNull] RdProperty<A> bar1,
      [NotNull] RdMap<int, ScalarPrimer> mapScalar,
      [NotNull] RdMap<int, FooBar> mapBindable,
      [NotNull] RdProperty<string> property_with_default_nls,
      [NotNull] RdProperty<string> property_with_several_attrs,
      [NotNull] RdProperty<string> nls_prop,
      [NotNull] RdProperty<string> nullable_nls_prop,
      [NotNull] string non_nls_open_field,
      [NotNull] RdProperty<string> y,
      [NotNull] RdProperty<org.example.Z> z,
      int x,
      [NotNull] RdMap<int, int> sdf
    ) : base (
      y,
      z,
      x,
      sdf
     ) 
    {
      if (foo == null) throw new ArgumentNullException("foo");
      if (bar == null) throw new ArgumentNullException("bar");
      if (nls_field == null) throw new ArgumentNullException("nls_field");
      if (string_list_field == null) throw new ArgumentNullException("string_list_field");
      if (nls_list_field == null) throw new ArgumentNullException("nls_list_field");
      if (foo1 == null) throw new ArgumentNullException("foo1");
      if (bar1 == null) throw new ArgumentNullException("bar1");
      if (mapScalar == null) throw new ArgumentNullException("mapScalar");
      if (mapBindable == null) throw new ArgumentNullException("mapBindable");
      if (property_with_default_nls == null) throw new ArgumentNullException("property_with_default_nls");
      if (property_with_several_attrs == null) throw new ArgumentNullException("property_with_several_attrs");
      if (nls_prop == null) throw new ArgumentNullException("nls_prop");
      if (nullable_nls_prop == null) throw new ArgumentNullException("nullable_nls_prop");
      if (non_nls_open_field == null) throw new ArgumentNullException("non_nls_open_field");
      
      Foo = foo;
      Bar = bar;
      Nls_field = nls_field;
      Nls_nullable_field = nls_nullable_field;
      String_list_field = string_list_field;
      Nls_list_field = nls_list_field;
      _Foo1 = foo1;
      _Bar1 = bar1;
      _MapScalar = mapScalar;
      _MapBindable = mapBindable;
      _Property_with_default_nls = property_with_default_nls;
      _Property_with_several_attrs = property_with_several_attrs;
      _Nls_prop = nls_prop;
      _Nullable_nls_prop = nullable_nls_prop;
      Non_nls_open_field = non_nls_open_field;
      _MapScalar.OptimizeNested = true;
      _Property_with_default_nls.OptimizeNested = true;
      _Property_with_several_attrs.OptimizeNested = true;
      _Nls_prop.OptimizeNested = true;
      _Nullable_nls_prop.OptimizeNested = true;
      _MapScalar.Async = true;
      _Foo1.ValueCanBeNull = true;
      _Bar1.ValueCanBeNull = true;
      _Nullable_nls_prop.ValueCanBeNull = true;
      BindableChildren.Add(new KeyValuePair<string, object>("foo", Foo));
      BindableChildren.Add(new KeyValuePair<string, object>("bar", Bar));
      BindableChildren.Add(new KeyValuePair<string, object>("foo1", _Foo1));
      BindableChildren.Add(new KeyValuePair<string, object>("bar1", _Bar1));
      BindableChildren.Add(new KeyValuePair<string, object>("mapScalar", _MapScalar));
      BindableChildren.Add(new KeyValuePair<string, object>("mapBindable", _MapBindable));
      BindableChildren.Add(new KeyValuePair<string, object>("property_with_default_nls", _Property_with_default_nls));
      BindableChildren.Add(new KeyValuePair<string, object>("property_with_several_attrs", _Property_with_several_attrs));
      BindableChildren.Add(new KeyValuePair<string, object>("nls_prop", _Nls_prop));
      BindableChildren.Add(new KeyValuePair<string, object>("nullable_nls_prop", _Nullable_nls_prop));
    }
    //secondary constructor
    public Baz (
      [NotNull] List<org.example.Foo> foo,
      [NotNull] List<A> bar,
      [NotNull] string nls_field,
      [CanBeNull] string nls_nullable_field,
      [NotNull] List<string> string_list_field,
      [NotNull] List<string> nls_list_field,
      [NotNull] string non_nls_open_field,
      int x
    ) : this (
      foo,
      bar,
      nls_field,
      nls_nullable_field,
      string_list_field,
      nls_list_field,
      new RdProperty<org.example.Foo>(ReadFooNullable, WriteFooNullable),
      new RdProperty<A>(ReadANullable, WriteANullable),
      new RdMap<int, ScalarPrimer>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, ScalarPrimer.Read, ScalarPrimer.Write),
      new RdMap<int, FooBar>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, FooBar.Read, FooBar.Write),
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString, const_for_default_nls),
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new RdProperty<string>(ReadStringNullable, WriteStringNullable),
      non_nls_open_field,
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new RdProperty<org.example.Z>(ReadZ, WriteZ),
      x,
      new RdMap<int, int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt)
    ) {}
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<Baz> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var y = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var z = RdProperty<org.example.Z>.Read(ctx, reader, ReadZ, WriteZ);
      var x = reader.ReadInt();
      var sdf = RdMap<int, int>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt);
      var foo = ReadFooList(ctx, reader);
      var bar = ReadANullableList(ctx, reader);
      var nls_field = reader.ReadString();
      var nls_nullable_field = ReadStringNullable(ctx, reader);
      var string_list_field = ReadStringList(ctx, reader);
      var nls_list_field = ReadStringList(ctx, reader);
      var foo1 = RdProperty<org.example.Foo>.Read(ctx, reader, ReadFooNullable, WriteFooNullable);
      var bar1 = RdProperty<A>.Read(ctx, reader, ReadANullable, WriteANullable);
      var mapScalar = RdMap<int, ScalarPrimer>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, ScalarPrimer.Read, ScalarPrimer.Write);
      var mapBindable = RdMap<int, FooBar>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, FooBar.Read, FooBar.Write);
      var property_with_default_nls = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var property_with_several_attrs = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var nls_prop = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var nullable_nls_prop = RdProperty<string>.Read(ctx, reader, ReadStringNullable, WriteStringNullable);
      var non_nls_open_field = reader.ReadString();
      var _result = new Baz(foo, bar, nls_field, nls_nullable_field, string_list_field, nls_list_field, foo1, bar1, mapScalar, mapBindable, property_with_default_nls, property_with_several_attrs, nls_prop, nullable_nls_prop, non_nls_open_field, y, z, x, sdf).WithId(_id);
      return _result;
    };
    public static CtxReadDelegate<List<org.example.Foo>> ReadFooList = org.example.Foo.Read.List();
    public static CtxReadDelegate<List<A>> ReadANullableList = A.Read.NullableClass().List();
    public static CtxReadDelegate<string> ReadStringNullable = JetBrains.Rd.Impl.Serializers.ReadString.NullableClass();
    public static CtxReadDelegate<List<string>> ReadStringList = JetBrains.Rd.Impl.Serializers.ReadString.List();
    public static CtxReadDelegate<org.example.Foo> ReadFooNullable = org.example.Foo.Read.NullableClass();
    public static CtxReadDelegate<A> ReadANullable = A.Read.NullableClass();
    public static CtxReadDelegate<org.example.Z> ReadZ = new CtxReadDelegate<org.example.Z>(JetBrains.Rd.Impl.Serializers.ReadEnum<org.example.Z>);
    
    public static new CtxWriteDelegate<Baz> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdProperty<string>.Write(ctx, writer, value._Y);
      RdProperty<org.example.Z>.Write(ctx, writer, value._Z);
      writer.Write(value.X);
      RdMap<int, int>.Write(ctx, writer, value._Sdf);
      WriteFooList(ctx, writer, value.Foo);
      WriteANullableList(ctx, writer, value.Bar);
      writer.Write(value.Nls_field);
      WriteStringNullable(ctx, writer, value.Nls_nullable_field);
      WriteStringList(ctx, writer, value.String_list_field);
      WriteStringList(ctx, writer, value.Nls_list_field);
      RdProperty<org.example.Foo>.Write(ctx, writer, value._Foo1);
      RdProperty<A>.Write(ctx, writer, value._Bar1);
      RdMap<int, ScalarPrimer>.Write(ctx, writer, value._MapScalar);
      RdMap<int, FooBar>.Write(ctx, writer, value._MapBindable);
      RdProperty<string>.Write(ctx, writer, value._Property_with_default_nls);
      RdProperty<string>.Write(ctx, writer, value._Property_with_several_attrs);
      RdProperty<string>.Write(ctx, writer, value._Nls_prop);
      RdProperty<string>.Write(ctx, writer, value._Nullable_nls_prop);
      writer.Write(value.Non_nls_open_field);
    };
    public static  CtxWriteDelegate<List<org.example.Foo>> WriteFooList = org.example.Foo.Write.List();
    public static  CtxWriteDelegate<List<A>> WriteANullableList = A.Write.NullableClass().List();
    public static  CtxWriteDelegate<string> WriteStringNullable = JetBrains.Rd.Impl.Serializers.WriteString.NullableClass();
    public static  CtxWriteDelegate<List<string>> WriteStringList = JetBrains.Rd.Impl.Serializers.WriteString.List();
    public static  CtxWriteDelegate<org.example.Foo> WriteFooNullable = org.example.Foo.Write.NullableClass();
    public static  CtxWriteDelegate<A> WriteANullable = A.Write.NullableClass();
    public static  CtxWriteDelegate<org.example.Z> WriteZ = new CtxWriteDelegate<org.example.Z>(JetBrains.Rd.Impl.Serializers.WriteEnum<org.example.Z>);
    
    //constants
    public const string const_nls = const_nls_value;
    public const string const_for_default_nls = 291;
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("Baz (");
      using (printer.IndentCookie()) {
        printer.Print("foo = "); Foo.PrintEx(printer); printer.Println();
        printer.Print("bar = "); Bar.PrintEx(printer); printer.Println();
        printer.Print("nls_field = "); Nls_field.PrintEx(printer); printer.Println();
        printer.Print("nls_nullable_field = "); Nls_nullable_field.PrintEx(printer); printer.Println();
        printer.Print("string_list_field = "); String_list_field.PrintEx(printer); printer.Println();
        printer.Print("nls_list_field = "); Nls_list_field.PrintEx(printer); printer.Println();
        printer.Print("foo1 = "); _Foo1.PrintEx(printer); printer.Println();
        printer.Print("bar1 = "); _Bar1.PrintEx(printer); printer.Println();
        printer.Print("mapScalar = "); _MapScalar.PrintEx(printer); printer.Println();
        printer.Print("mapBindable = "); _MapBindable.PrintEx(printer); printer.Println();
        printer.Print("property_with_default_nls = "); _Property_with_default_nls.PrintEx(printer); printer.Println();
        printer.Print("property_with_several_attrs = "); _Property_with_several_attrs.PrintEx(printer); printer.Println();
        printer.Print("nls_prop = "); _Nls_prop.PrintEx(printer); printer.Println();
        printer.Print("nullable_nls_prop = "); _Nullable_nls_prop.PrintEx(printer); printer.Println();
        printer.Print("non_nls_open_field = "); Non_nls_open_field.PrintEx(printer); printer.Println();
        printer.Print("y = "); _Y.PrintEx(printer); printer.Println();
        printer.Print("z = "); _Z.PrintEx(printer); printer.Println();
        printer.Print("x = "); X.PrintEx(printer); printer.Println();
        printer.Print("sdf = "); _Sdf.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:89</p>
  /// </summary>
  public sealed class Completion : RdBindableBase
  {
    //fields
    //public fields
    [NotNull] public IViewableMap<int, bool> LookupItems => _LookupItems;
    
    //private fields
    [NotNull] private readonly RdMap<int, bool> _LookupItems;
    
    //primary constructor
    private Completion(
      [NotNull] RdMap<int, bool> lookupItems
    )
    {
      if (lookupItems == null) throw new ArgumentNullException("lookupItems");
      
      _LookupItems = lookupItems;
      _LookupItems.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("lookupItems", _LookupItems));
    }
    //secondary constructor
    public Completion (
    ) : this (
      new RdMap<int, bool>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadBool, JetBrains.Rd.Impl.Serializers.WriteBool)
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<Completion> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var lookupItems = RdMap<int, bool>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadBool, JetBrains.Rd.Impl.Serializers.WriteBool);
      var _result = new Completion(lookupItems).WithId(_id);
      return _result;
    };
    
    public static CtxWriteDelegate<Completion> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdMap<int, bool>.Write(ctx, writer, value._LookupItems);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("Completion (");
      using (printer.IndentCookie()) {
        printer.Print("lookupItems = "); _LookupItems.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:84</p>
  /// </summary>
  public sealed class Document : RdBindableBase
  {
    //fields
    //public fields
    [NotNull] public FooBar Moniker {get; private set;}
    [CanBeNull] public string Buffer {get; private set;}
    [NotNull] public IRdCall<string, int> AndBackAgain => _AndBackAgain;
    [NotNull] public org.example.Completion Completion {get; private set;}
    [NotNull] public byte[] Arr1 {get; private set;}
    [NotNull] public bool[][] Arr2 {get; private set;}
    
    //private fields
    [NotNull] private readonly RdCall<string, int> _AndBackAgain;
    
    //primary constructor
    private Document(
      [NotNull] FooBar moniker,
      [CanBeNull] string buffer,
      [NotNull] RdCall<string, int> andBackAgain,
      [NotNull] org.example.Completion completion,
      [NotNull] byte[] arr1,
      [NotNull] bool[][] arr2
    )
    {
      if (moniker == null) throw new ArgumentNullException("moniker");
      if (andBackAgain == null) throw new ArgumentNullException("andBackAgain");
      if (completion == null) throw new ArgumentNullException("completion");
      if (arr1 == null) throw new ArgumentNullException("arr1");
      if (arr2 == null) throw new ArgumentNullException("arr2");
      
      Moniker = moniker;
      Buffer = buffer;
      _AndBackAgain = andBackAgain;
      Completion = completion;
      Arr1 = arr1;
      Arr2 = arr2;
      BindableChildren.Add(new KeyValuePair<string, object>("moniker", Moniker));
      BindableChildren.Add(new KeyValuePair<string, object>("andBackAgain", _AndBackAgain));
      BindableChildren.Add(new KeyValuePair<string, object>("completion", Completion));
    }
    //secondary constructor
    public Document (
      [NotNull] FooBar moniker,
      [CanBeNull] string buffer,
      [NotNull] byte[] arr1,
      [NotNull] bool[][] arr2
    ) : this (
      moniker,
      buffer,
      new RdCall<string, int>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt),
      new org.example.Completion(),
      arr1,
      arr2
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<Document> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var moniker = FooBar.Read(ctx, reader);
      var buffer = ReadStringNullable(ctx, reader);
      var andBackAgain = RdCall<string, int>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt);
      var completion = org.example.Completion.Read(ctx, reader);
      var arr1 = JetBrains.Rd.Impl.Serializers.ReadByteArray(ctx, reader);
      var arr2 = ReadBoolArrayArray(ctx, reader);
      var _result = new Document(moniker, buffer, andBackAgain, completion, arr1, arr2).WithId(_id);
      return _result;
    };
    public static CtxReadDelegate<string> ReadStringNullable = JetBrains.Rd.Impl.Serializers.ReadString.NullableClass();
    public static CtxReadDelegate<bool[][]> ReadBoolArrayArray = JetBrains.Rd.Impl.Serializers.ReadBoolArray.Array();
    
    public static CtxWriteDelegate<Document> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      FooBar.Write(ctx, writer, value.Moniker);
      WriteStringNullable(ctx, writer, value.Buffer);
      RdCall<string, int>.Write(ctx, writer, value._AndBackAgain);
      org.example.Completion.Write(ctx, writer, value.Completion);
      JetBrains.Rd.Impl.Serializers.WriteByteArray(ctx, writer, value.Arr1);
      WriteBoolArrayArray(ctx, writer, value.Arr2);
    };
    public static  CtxWriteDelegate<string> WriteStringNullable = JetBrains.Rd.Impl.Serializers.WriteString.NullableClass();
    public static  CtxWriteDelegate<bool[][]> WriteBoolArrayArray = JetBrains.Rd.Impl.Serializers.WriteBoolArray.Array();
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("Document (");
      using (printer.IndentCookie()) {
        printer.Print("moniker = "); Moniker.PrintEx(printer); printer.Println();
        printer.Print("buffer = "); Buffer.PrintEx(printer); printer.Println();
        printer.Print("andBackAgain = "); _AndBackAgain.PrintEx(printer); printer.Println();
        printer.Print("completion = "); Completion.PrintEx(printer); printer.Println();
        printer.Print("arr1 = "); Arr1.PrintEx(printer); printer.Println();
        printer.Print("arr2 = "); Arr2.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:26</p>
  /// </summary>
  [Flags]
  public enum EnumSetTest {
    a = 1 << 0,
    b = 1 << 1,
    c = 1 << 2
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:34</p>
  /// </summary>
  public abstract class Foo : RdBindableBase
  {
    //fields
    //public fields
    public int X {get; private set;}
    [NotNull] public IViewableMap<int, int> Sdf => _Sdf;
    
    //private fields
    [NotNull] protected readonly RdMap<int, int> _Sdf;
    
    //primary constructor
    protected Foo(
      int x,
      [NotNull] RdMap<int, int> sdf
    )
    {
      if (sdf == null) throw new ArgumentNullException("sdf");
      
      X = x;
      _Sdf = sdf;
      _Sdf.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("sdf", _Sdf));
    }
    //secondary constructor
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<Foo> Read = Polymorphic<Foo>.ReadAbstract(Foo_Unknown.Read);
    
    public static CtxWriteDelegate<Foo> Write = Polymorphic<Foo>.Write;
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    //toString
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:73</p>
  /// </summary>
  public sealed class FooBar : RdBindableBase
  {
    //fields
    //public fields
    [NotNull] public Baz A {get; private set;}
    
    //private fields
    //primary constructor
    public FooBar(
      [NotNull] Baz a
    )
    {
      if (a == null) throw new ArgumentNullException("a");
      
      A = a;
      BindableChildren.Add(new KeyValuePair<string, object>("a", A));
    }
    //secondary constructor
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<FooBar> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var a = Baz.Read(ctx, reader);
      var _result = new FooBar(a).WithId(_id);
      return _result;
    };
    
    public static CtxWriteDelegate<FooBar> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      Baz.Write(ctx, writer, value.A);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("FooBar (");
      using (printer.IndentCookie()) {
        printer.Print("a = "); A.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  public sealed class Foo_Unknown : Foo
  {
    //fields
    //public fields
    
    //private fields
    //primary constructor
    private Foo_Unknown(
      int x,
      [NotNull] RdMap<int, int> sdf
    ) : base (
      x,
      sdf
     ) 
    {
    }
    //secondary constructor
    public Foo_Unknown (
      int x
    ) : this (
      x,
      new RdMap<int, int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt)
    ) {}
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<Foo_Unknown> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var x = reader.ReadInt();
      var sdf = RdMap<int, int>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt);
      var _result = new Foo_Unknown(x, sdf).WithId(_id);
      return _result;
    };
    
    public static new CtxWriteDelegate<Foo_Unknown> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      writer.Write(value.X);
      RdMap<int, int>.Write(ctx, writer, value._Sdf);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("Foo_Unknown (");
      using (printer.IndentCookie()) {
        printer.Print("x = "); X.PrintEx(printer); printer.Println();
        printer.Print("sdf = "); _Sdf.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:98</p>
  /// </summary>
  public sealed class ScalarExample : IPrintable, IEquatable<ScalarExample>
  {
    //fields
    //public fields
    public int Intfield {get; private set;}
    
    //private fields
    //primary constructor
    public ScalarExample(
      int intfield
    )
    {
      Intfield = intfield;
    }
    //secondary constructor
    //deconstruct trait
    public void Deconstruct(out int intfield)
    {
      intfield = Intfield;
    }
    //statics
    
    public static CtxReadDelegate<ScalarExample> Read = (ctx, reader) => 
    {
      var intfield = reader.ReadInt();
      var _result = new ScalarExample(intfield);
      return _result;
    };
    
    public static CtxWriteDelegate<ScalarExample> Write = (ctx, writer, value) => 
    {
      writer.Write(value.Intfield);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != GetType()) return false;
      return Equals((ScalarExample) obj);
    }
    public bool Equals(ScalarExample other)
    {
      if (ReferenceEquals(null, other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return Intfield == other.Intfield;
    }
    //hash code trait
    public override int GetHashCode()
    {
      unchecked {
        var hash = 0;
        hash = hash * 31 + Intfield.GetHashCode();
        return hash;
      }
    }
    //pretty print
    public void Print(PrettyPrinter printer)
    {
      printer.Println("ScalarExample (");
      using (printer.IndentCookie()) {
        printer.Print("intfield = "); Intfield.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:39</p>
  /// </summary>
  public abstract class ScalarPrimer{
    //fields
    //public fields
    public int X {get; private set;}
    
    //private fields
    //primary constructor
    protected ScalarPrimer(
      int x
    )
    {
      X = x;
    }
    //secondary constructor
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<ScalarPrimer> Read = Polymorphic<ScalarPrimer>.ReadAbstract(ScalarPrimer_Unknown.Read);
    
    public static CtxWriteDelegate<ScalarPrimer> Write = Polymorphic<ScalarPrimer>.Write;
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    //toString
  }
  
  
  public sealed class ScalarPrimer_Unknown : ScalarPrimer
  {
    //fields
    //public fields
    
    //private fields
    //primary constructor
    public ScalarPrimer_Unknown(
      int x
    ) : base (
      x
     ) 
    {
    }
    //secondary constructor
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<ScalarPrimer_Unknown> Read = (ctx, reader) => 
    {
      var x = reader.ReadInt();
      var _result = new ScalarPrimer_Unknown(x);
      return _result;
    };
    
    public static new CtxWriteDelegate<ScalarPrimer_Unknown> Write = (ctx, writer, value) => 
    {
      writer.Write(value.X);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != GetType()) return false;
      return Equals((ScalarPrimer_Unknown) obj);
    }
    public bool Equals(ScalarPrimer_Unknown other)
    {
      if (ReferenceEquals(null, other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return X == other.X;
    }
    //hash code trait
    public override int GetHashCode()
    {
      unchecked {
        var hash = 0;
        hash = hash * 31 + X.GetHashCode();
        return hash;
      }
    }
    //pretty print
    public void Print(PrettyPrinter printer)
    {
      printer.Println("ScalarPrimer_Unknown (");
      using (printer.IndentCookie()) {
        printer.Print("x = "); X.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:22</p>
  /// </summary>
  public sealed class Selection : IPrintable, IEquatable<Selection>
  {
    //fields
    //public fields
    public int Start {get; private set;}
    public int End {get; private set;}
    [NotNull] public int[] Lst {get; private set;}
    public org.example.EnumSetTest EnumSetTest {get; private set;}
    [NotNull] public string Nls_field {get; private set;}
    
    //private fields
    //primary constructor
    public Selection(
      int start,
      int end,
      [NotNull] int[] lst,
      org.example.EnumSetTest enumSetTest,
      [NotNull] string nls_field
    )
    {
      if (lst == null) throw new ArgumentNullException("lst");
      if (nls_field == null) throw new ArgumentNullException("nls_field");
      
      Start = start;
      End = end;
      Lst = lst;
      EnumSetTest = enumSetTest;
      Nls_field = nls_field;
    }
    //secondary constructor
    //deconstruct trait
    public void Deconstruct(out int start, out int end, [NotNull] out int[] lst, out org.example.EnumSetTest enumSetTest, [NotNull] out string nls_field)
    {
      start = Start;
      end = End;
      lst = Lst;
      enumSetTest = EnumSetTest;
      nls_field = Nls_field;
    }
    //statics
    
    public static CtxReadDelegate<Selection> Read = (ctx, reader) => 
    {
      var start = reader.ReadInt();
      var end = reader.ReadInt();
      var lst = JetBrains.Rd.Impl.Serializers.ReadIntArray(ctx, reader);
      var enumSetTest = (org.example.EnumSetTest)reader.ReadInt();
      var nls_field = reader.ReadString();
      var _result = new Selection(start, end, lst, enumSetTest, nls_field);
      return _result;
    };
    
    public static CtxWriteDelegate<Selection> Write = (ctx, writer, value) => 
    {
      writer.Write(value.Start);
      writer.Write(value.End);
      JetBrains.Rd.Impl.Serializers.WriteIntArray(ctx, writer, value.Lst);
      writer.Write((int)value.EnumSetTest);
      writer.Write(value.Nls_field);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != GetType()) return false;
      return Equals((Selection) obj);
    }
    public bool Equals(Selection other)
    {
      if (ReferenceEquals(null, other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return Start == other.Start && End == other.End && Lst.SequenceEqual(other.Lst) && EnumSetTest == other.EnumSetTest && Nls_field == other.Nls_field;
    }
    //hash code trait
    public override int GetHashCode()
    {
      unchecked {
        var hash = 0;
        hash = hash * 31 + Start.GetHashCode();
        hash = hash * 31 + End.GetHashCode();
        hash = hash * 31 + Lst.ContentHashCode();
        hash = hash * 31 + (int) EnumSetTest;
        hash = hash * 31 + Nls_field.GetHashCode();
        return hash;
      }
    }
    //pretty print
    public void Print(PrettyPrinter printer)
    {
      printer.Println("Selection (");
      using (printer.IndentCookie()) {
        printer.Print("start = "); Start.PrintEx(printer); printer.Println();
        printer.Print("end = "); End.PrintEx(printer); printer.Println();
        printer.Print("lst = "); Lst.PrintEx(printer); printer.Println();
        printer.Print("enumSetTest = "); EnumSetTest.PrintEx(printer); printer.Println();
        printer.Print("nls_field = "); Nls_field.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:101</p>
  /// </summary>
  public sealed class TextControl : RdBindableBase
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<org.example.Selection> Selection => _Selection;
    [NotNull] public void Vsink() => _Vsink.Fire();
    [NotNull] public ISource<Unit> Vsource => _Vsource;
    [NotNull] public IRdEndpoint<int, string> There1 => _There1;
    
    //private fields
    [NotNull] private readonly RdProperty<org.example.Selection> _Selection;
    [NotNull] private readonly RdSignal<Unit> _Vsink;
    [NotNull] private readonly RdSignal<Unit> _Vsource;
    [NotNull] private readonly RdCall<int, string> _There1;
    
    //primary constructor
    private TextControl(
      [NotNull] RdProperty<org.example.Selection> selection,
      [NotNull] RdSignal<Unit> vsink,
      [NotNull] RdSignal<Unit> vsource,
      [NotNull] RdCall<int, string> there1
    )
    {
      if (selection == null) throw new ArgumentNullException("selection");
      if (vsink == null) throw new ArgumentNullException("vsink");
      if (vsource == null) throw new ArgumentNullException("vsource");
      if (there1 == null) throw new ArgumentNullException("there1");
      
      _Selection = selection;
      _Vsink = vsink;
      _Vsource = vsource;
      _There1 = there1;
      _Selection.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("selection", _Selection));
      BindableChildren.Add(new KeyValuePair<string, object>("vsink", _Vsink));
      BindableChildren.Add(new KeyValuePair<string, object>("vsource", _Vsource));
      BindableChildren.Add(new KeyValuePair<string, object>("there1", _There1));
    }
    //secondary constructor
    public TextControl (
    ) : this (
      new RdProperty<org.example.Selection>(org.example.Selection.Read, org.example.Selection.Write),
      new RdSignal<Unit>(JetBrains.Rd.Impl.Serializers.ReadVoid, JetBrains.Rd.Impl.Serializers.WriteVoid),
      new RdSignal<Unit>(JetBrains.Rd.Impl.Serializers.ReadVoid, JetBrains.Rd.Impl.Serializers.WriteVoid),
      new RdCall<int, string>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString)
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<TextControl> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var selection = RdProperty<org.example.Selection>.Read(ctx, reader, org.example.Selection.Read, org.example.Selection.Write);
      var vsink = RdSignal<Unit>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadVoid, JetBrains.Rd.Impl.Serializers.WriteVoid);
      var vsource = RdSignal<Unit>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadVoid, JetBrains.Rd.Impl.Serializers.WriteVoid);
      var there1 = RdCall<int, string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var _result = new TextControl(selection, vsink, vsource, there1).WithId(_id);
      return _result;
    };
    
    public static CtxWriteDelegate<TextControl> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdProperty<org.example.Selection>.Write(ctx, writer, value._Selection);
      RdSignal<Unit>.Write(ctx, writer, value._Vsink);
      RdSignal<Unit>.Write(ctx, writer, value._Vsource);
      RdCall<int, string>.Write(ctx, writer, value._There1);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("TextControl (");
      using (printer.IndentCookie()) {
        printer.Print("selection = "); _Selection.PrintEx(printer); printer.Println();
        printer.Print("vsink = "); _Vsink.PrintEx(printer); printer.Println();
        printer.Print("vsource = "); _Vsource.PrintEx(printer); printer.Println();
        printer.Print("there1 = "); _There1.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: Example.kt:45</p>
  /// </summary>
  public enum Z {
    Bar,
    z1
  }
}
