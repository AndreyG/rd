import com.jetbrains.rd.gradle.tasks.InteropTask
import com.jetbrains.rd.gradle.tasks.KotlinExec

dependencies {
//    testCompileOnly files { project(':rd-framework:').sourceSets.test.kotlin.srcDirs }
//    compile project(':rd-framework:').sourceSets.test.output
    compile project(':rd-kt:rd-framework:')
    implementation gradleApi()
}

def getCppTaskByName(String name) {
    return project(':rd-cpp').getTasksByName(name, true).iterator().next()
}

task CrossTestKtServerAllEntities(type: KotlinExec, dependsOn: tasks.getByPath(':rd-kt:rd-framework:jvmTestClasses')) {
    classpath += project.sourceSets.test.runtimeClasspath
    classpath += project.sourceSets.test.compileClasspath

    addDependencies()
}

task CrossTestKtServerBigBuffer(type: KotlinExec, dependsOn: tasks.getByPath(':rd-kt:rd-framework:jvmTestClasses')) {
    classpath += project.sourceSets.test.runtimeClasspath
    classpath += project.sourceSets.test.compileClasspath

    addDependencies()
}

task CrossTestKtCppAllEntities(type: InteropTask) {
    taskServer = CrossTestKtServerAllEntities
    taskClient = getCppTaskByName('CrossTestCppClientAllEntities')

    addDependencies()
}

task CrossTestKtCppBigBuffer(type: InteropTask) {
    taskServer = CrossTestKtServerBigBuffer
    taskClient = getCppTaskByName('CrossTestCppClientBigBuffer')
}

task crossTest() {
    dependsOn 'CrossTestKtCppAllEntities', 'CrossTestKtCppBigBuffer'
}