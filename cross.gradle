import com.jetbrains.rd.gradle.tasks.InteropTask
import com.jetbrains.rd.gradle.tasks.KotlinExec

dependencies {
//    testCompileOnly files { project(':rd-framework:').sourceSets.test.kotlin.srcDirs }
//    compile project(':rd-framework:').sourceSets.test.output
    compile project(':rd-framework:')
    implementation gradleApi()
}

task runCrossTestServerAllEntities(type: KotlinExec, dependsOn: tasks.getByPath(':rd-framework:jvmTestClasses')) {
    classpath += project.sourceSets.test.runtimeClasspath
    classpath += project.sourceSets.test.compileClasspath
//    classpath += sourceSets.getByName('rd-framework').runtimeClasspath
//    classpath += project.sourceSets.getByName('jvmTest').compileClasspath
//    classpath += project(':rd-framework:').sourceSets.test.output.classesDir
//    classpath += files("${project.rootDir}/rd-kt/rd-framework/build/classes/kotlin/jvm/test")
//    classpath += files('C:\\Work\\rd\\rd-kt\\rd-framework\\build\\classes\\kotlin\\jvm\\test\\com\\jetbrains\\rd\\framework\\test\\cross')
    classpath += files('rd-kt/rd-framework/build/classes/kotlin/jvm/test')
    main = 'com.jetbrains.rd.framework.test.cross.CrossTestServerAllEntitiesKt'
    args "${buildDir}/gold/CrossTestServerAllEntitiesKt.tmp"
//todo temporary hack
}

task runCrossTestAllEntities(type: InteropTask) {
    taskServer = runCrossTestServerAllEntities
    taskClient = project(':rd-cpp').getTasksByName('runCrossTestClientAllEntities', true).iterator().next()
}
